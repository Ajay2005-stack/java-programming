import java.util.Scanner;

public class CSKTicketChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String code = scanner.nextLine();

        System.out.println(isAlternatingTwoLetters(code) ? "Yes" : "No");
    }

    private static boolean isAlternatingTwoLetters(String s) {
        // If length is less than 2, cannot alternate two different letters
        if (s.length() < 2) {
            return false;
        }

        // Check if there are exactly two distinct letters
        char first = s.charAt(0);
        char second = 0;
        boolean secondFound = false;

        for (char c : s.toCharArray()) {
            if (c != first) {
                if (!secondFound) {
                    second = c;
                    secondFound = true;
                } else if (c != second) {
                    // More than two distinct letters
                    return false;
                }
            }
        }

        // If only one distinct letter, return false
        if (!secondFound) {
            return false;
        }

        // Now check alternating pattern: positions even -> first, odd -> second or vice versa
        for (int i = 0; i < s.length(); i++) {
            char expected = (i % 2 == 0) ? first : second;
            if (s.charAt(i) != expected) {
                // Try the other pattern
                // i.e. even -> second, odd -> first
                for (int j = 0; j < s.length(); j++) {
                    char expectedAlt = (j % 2 == 0) ? second : first;
                    if (s.charAt(j) != expectedAlt) {
                        return false; // Neither pattern matched fully
                    }
                }
                return true; // Pattern matched for alternate arrangement
            }
        }
        return true; // Pattern matched for first arrangement
    }
}
